<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- zjc_spec_image[zjc_spec_image]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-06-14 09:18:09 -->
<mapper namespace="com.zjc.goods.dao.ZjcSpecImageDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="ZjcSpecImagePO">
		INSERT INTO zjc_spec_image (
		<if test="goods_id != null">
	         goods_id, <!-- 商品规格图片表id -->
		</if>
		<if test="spec_image_id != null">
	         spec_image_id, <!-- 规格项id -->
		</if>
		<if test="src != null and src != ''">
	         src, <!-- 商品规格图片路径 -->
		</if>
		)VALUES(
		<if test="goods_id != null">
	          #{goods_id, jdbcType=INTEGER}, <!-- 商品规格图片表id -->
	    </if>
		<if test="spec_image_id != null">
	          #{spec_image_id, jdbcType=INTEGER}, <!-- 规格项id -->
	    </if>
		<if test="src != null and src != ''">
	          #{src, jdbcType=VARCHAR}, <!-- 商品规格图片路径 -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="ZjcSpecImagePO">
		INSERT INTO zjc_spec_image (
		    <include refid="column" />
		)
		VALUES (
		    #{goods_id, jdbcType=INTEGER},  <!-- 商品规格图片表id -->
		    #{spec_image_id, jdbcType=INTEGER},  <!-- 规格项id -->
		    #{src, jdbcType=VARCHAR}  <!-- 商品规格图片路径 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="ZjcSpecImagePO">
		UPDATE zjc_spec_image
		<set>
			<if test="goods_id != null">
		          goods_id = #{goods_id, jdbcType=INTEGER},  <!-- 商品规格图片表id -->
			</if>
			<if test="spec_image_id != null">
		          spec_image_id = #{spec_image_id, jdbcType=INTEGER},  <!-- 规格项id -->
			</if>
			<if test="src != null">
		          src = #{src, jdbcType=VARCHAR},  <!-- 商品规格图片路径 -->
			</if>
		</set>
		WHERE 
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM zjc_spec_image WHERE 
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="ZjcSpecImagePO">
		SELECT
		<include refid="column" />
		FROM zjc_spec_image WHERE 
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="ZjcSpecImagePO">
		SELECT
		    <include refid="column" />
		FROM zjc_spec_image
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="ZjcSpecImagePO">
		SELECT
			<include refid="column" />	
		FROM zjc_spec_image
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="ZjcSpecImagePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM zjc_spec_image
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="ZjcSpecImagePO">
		SELECT
			<include refid="column" />	
		FROM zjc_spec_image
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="ZjcSpecImagePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM zjc_spec_image
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM zjc_spec_image
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM zjc_spec_image
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  goods_id,  <!-- 商品规格图片表id -->
		  spec_image_id,  <!-- 规格项id -->
		  src  <!-- 商品规格图片路径 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  zjc_spec_image.goods_id,  <!-- 商品规格图片表id -->
		  zjc_spec_image.spec_image_id,  <!-- 规格项id -->
		  zjc_spec_image.src  <!-- 商品规格图片路径 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="goods_id != null ">
		      AND goods_id = #{goods_id}  <!-- 商品规格图片表id -->
		</if>
	   <if test="spec_image_id != null ">
		      AND spec_image_id = #{spec_image_id}  <!-- 规格项id -->
		</if>
	    <if test="src != null and src != ''">
		      AND src = #{src}  <!-- 商品规格图片路径 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="src != null and src != ''">
		      AND src like '${src}%'  <!-- 商品规格图片路径 -->
		</if>
	</sql>
	
</mapper>