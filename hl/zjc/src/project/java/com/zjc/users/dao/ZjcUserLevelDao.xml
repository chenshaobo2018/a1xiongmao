<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- zjc_user_level[zjc_user_level]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-06-05 09:15:30 -->
<mapper namespace="com.zjc.users.dao.ZjcUserLevelDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="level_id" parameterType="ZjcUserLevelPO">
		INSERT INTO zjc_user_level (
		<if test="level_name != null and level_name != ''">
	         level_name, <!-- 头衔名称 -->
		</if>
		<if test="amount != null">
	         amount, <!-- 等级必要金额 -->
		</if>
		<if test="discount != null and discount != ''">
	         discount, <!-- 折扣 -->
		</if>
		<if test="describes != null and describes != ''">
	         describes, <!-- 头街 描述 -->
		</if>
		<if test="is_use_js != null">
	         is_use_js, <!-- 是否开通结算中心 -->
		</if>
		<if test="is_use_number != null">
	         is_use_number, <!-- 开通结算中心个数 -->
		</if>
	          level_id
		)VALUES(
		<if test="level_name != null and level_name != ''">
	          #{level_name, jdbcType=VARCHAR}, <!-- 头衔名称 -->
	    </if>
		<if test="amount != null">
	          #{amount, jdbcType=INTEGER}, <!-- 等级必要金额 -->
	    </if>
		<if test="discount != null and discount != ''">
	          #{discount, jdbcType=VARCHAR}, <!-- 折扣 -->
	    </if>
		<if test="describes != null and describes != ''">
	          #{describes, jdbcType=VARCHAR}, <!-- 头街 描述 -->
	    </if>
		<if test="is_use_js != null">
	          #{is_use_js, jdbcType=INTEGER}, <!-- 是否开通结算中心 -->
	    </if>
		<if test="is_use_number != null">
	          #{is_use_number, jdbcType=INTEGER}, <!-- 开通结算中心个数 -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="level_id" parameterType="ZjcUserLevelPO">
		INSERT INTO zjc_user_level (
		    <include refid="column" />
		)
		VALUES (
		    #{level_id, jdbcType=INTEGER},  <!-- 表id -->
		    #{level_name, jdbcType=VARCHAR},  <!-- 头衔名称 -->
		    #{amount, jdbcType=INTEGER},  <!-- 等级必要金额 -->
		    #{discount, jdbcType=VARCHAR},  <!-- 折扣 -->
		    #{describes, jdbcType=VARCHAR},  <!-- 头街 描述 -->
		    #{is_use_js, jdbcType=INTEGER},  <!-- 是否开通结算中心 -->
		    #{is_use_number, jdbcType=INTEGER}  <!-- 开通结算中心个数 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="ZjcUserLevelPO">
		UPDATE zjc_user_level
		<set>
			<if test="level_id != null">
		          level_id = #{level_id, jdbcType=INTEGER},  <!-- 表id -->
			</if>
			<if test="level_name != null">
		          level_name = #{level_name, jdbcType=VARCHAR},  <!-- 头衔名称 -->
			</if>
			<if test="amount != null">
		          amount = #{amount, jdbcType=INTEGER},  <!-- 等级必要金额 -->
			</if>
			<if test="discount != null">
		          discount = #{discount, jdbcType=VARCHAR},  <!-- 折扣 -->
			</if>
			<if test="describes != null">
		          describes = #{describes, jdbcType=VARCHAR},  <!-- 头街 描述 -->
			</if>
			<if test="is_use_js != null">
		          is_use_js = #{is_use_js, jdbcType=INTEGER},  <!-- 是否开通结算中心 -->
			</if>
			<if test="is_use_number != null">
		          is_use_number = #{is_use_number, jdbcType=INTEGER},  <!-- 开通结算中心个数 -->
			</if>
		</set>
		WHERE  level_id = #{level_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM zjc_user_level WHERE  level_id = #{level_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="ZjcUserLevelPO">
		SELECT
		<include refid="column" />
		FROM zjc_user_level WHERE  level_id = #{level_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="ZjcUserLevelPO">
		SELECT
		    <include refid="column" />
		FROM zjc_user_level
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="ZjcUserLevelPO">
		SELECT
			<include refid="column" />	
		FROM zjc_user_level
		<where>
		    <include refid="equal" />
		</where>
		order by level_id desc	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="ZjcUserLevelPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM zjc_user_level
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="ZjcUserLevelPO">
		SELECT
			<include refid="column" />	
		FROM zjc_user_level
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="ZjcUserLevelPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM zjc_user_level
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM zjc_user_level
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM zjc_user_level
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  level_id,  <!-- 表id -->
		  level_name,  <!-- 头衔名称 -->
		  amount,  <!-- 等级必要金额 -->
		  discount,  <!-- 折扣 -->
		  describes,  <!-- 头街 描述 -->
		  is_use_js,  <!-- 是否开通结算中心 -->
		  is_use_number  <!-- 开通结算中心个数 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  zjc_user_level.level_id,  <!-- 表id -->
		  zjc_user_level.level_name,  <!-- 头衔名称 -->
		  zjc_user_level.amount,  <!-- 等级必要金额 -->
		  zjc_user_level.discount,  <!-- 折扣 -->
		  zjc_user_level.describes,  <!-- 头街 描述 -->
		  zjc_user_level.is_use_js,  <!-- 是否开通结算中心 -->
		  zjc_user_level.is_use_number  <!-- 开通结算中心个数 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="level_id != null ">
		      AND level_id = #{level_id}  <!-- 表id -->
		</if>
	    <if test="level_name != null and level_name != ''">
		      AND level_name = #{level_name}  <!-- 头衔名称 -->
		</if>
	   <if test="amount != null ">
		      AND amount = #{amount}  <!-- 等级必要金额 -->
		</if>
	    <if test="discount != null and discount != ''">
		      AND discount = #{discount}  <!-- 折扣 -->
		</if>
	    <if test="describes != null and describes != ''">
		      AND describes = #{describes}  <!-- 头街 描述 -->
		</if>
	   <if test="is_use_js != null ">
		      AND is_use_js = #{is_use_js}  <!-- 是否开通结算中心 -->
		</if>
	   <if test="is_use_number != null ">
		      AND is_use_number = #{is_use_number}  <!-- 开通结算中心个数 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="level_name != null and level_name != ''">
		      AND level_name like '${level_name}%'  <!-- 头衔名称 -->
		</if>
	    <if test="discount != null and discount != ''">
		      AND discount like '${discount}%'  <!-- 折扣 -->
		</if>
	    <if test="describes != null and describes != ''">
		      AND describes like '${describes}%'  <!-- 头街 描述 -->
		</if>
	</sql>
	
</mapper>