<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- zjc_account_log[zjc_account_log]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-07-18 11:46:15 -->
<mapper namespace="com.zjc.users.dao.ZjcAccountLogDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="log_id" parameterType="ZjcAccountLogPO">
		INSERT INTO zjc_account_log (
		<if test="user_id != null">
	         user_id, <!-- 用户id -->
		</if>
		<if test="user_money != null">
	         user_money, <!-- 用户金额 -->
		</if>
		<if test="frozen_money != null">
	         frozen_money, <!-- 冻结金额 -->
		</if>
		<if test="pay_points != null">
	         pay_points, <!-- 支付积分 -->
		</if>
		<if test="change_time != null and change_time != ''">
	         change_time, <!-- 变动时间 -->
		</if>
		<if test="descd != null and descd != ''">
	         descd, <!-- 描述 -->
		</if>
		<if test="order_sn != null and order_sn != ''">
	         order_sn, <!-- 订单编号 -->
		</if>
		<if test="order_id != null">
	         order_id, <!-- 订单id -->
		</if>
	          log_id
		)VALUES(
		<if test="user_id != null">
	          #{user_id, jdbcType=INTEGER}, <!-- 用户id -->
	    </if>
		<if test="user_money != null">
	          #{user_money, jdbcType=NUMERIC}, <!-- 用户金额 -->
	    </if>
		<if test="frozen_money != null">
	          #{frozen_money, jdbcType=NUMERIC}, <!-- 冻结金额 -->
	    </if>
		<if test="pay_points != null">
	          #{pay_points, jdbcType=INTEGER}, <!-- 支付积分 -->
	    </if>
		<if test="change_time != null and change_time != ''">
	          #{change_time, jdbcType=VARCHAR}, <!-- 变动时间 -->
	    </if>
		<if test="descd != null and descd != ''">
	          #{descd, jdbcType=VARCHAR}, <!-- 描述 -->
	    </if>
		<if test="order_sn != null and order_sn != ''">
	          #{order_sn, jdbcType=VARCHAR}, <!-- 订单编号 -->
	    </if>
		<if test="order_id != null">
	          #{order_id, jdbcType=INTEGER}, <!-- 订单id -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="log_id" parameterType="ZjcAccountLogPO">
		INSERT INTO zjc_account_log (
		    <include refid="column" />
		)
		VALUES (
		    #{log_id, jdbcType=INTEGER},  <!-- 日志id -->
		    #{user_id, jdbcType=INTEGER},  <!-- 用户id -->
		    #{user_money, jdbcType=NUMERIC},  <!-- 用户金额 -->
		    #{frozen_money, jdbcType=NUMERIC},  <!-- 冻结金额 -->
		    #{pay_points, jdbcType=INTEGER},  <!-- 支付积分 -->
		    #{change_time, jdbcType=VARCHAR},  <!-- 变动时间 -->
		    #{descd, jdbcType=VARCHAR},  <!-- 描述 -->
		    #{order_sn, jdbcType=VARCHAR},  <!-- 订单编号 -->
		    #{order_id, jdbcType=INTEGER}  <!-- 订单id -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="ZjcAccountLogPO">
		UPDATE zjc_account_log
		<set>
			<if test="log_id != null">
		          log_id = #{log_id, jdbcType=INTEGER},  <!-- 日志id -->
			</if>
			<if test="user_id != null">
		          user_id = #{user_id, jdbcType=INTEGER},  <!-- 用户id -->
			</if>
			<if test="user_money != null">
		          user_money = #{user_money, jdbcType=NUMERIC},  <!-- 用户金额 -->
			</if>
			<if test="frozen_money != null">
		          frozen_money = #{frozen_money, jdbcType=NUMERIC},  <!-- 冻结金额 -->
			</if>
			<if test="pay_points != null">
		          pay_points = #{pay_points, jdbcType=INTEGER},  <!-- 支付积分 -->
			</if>
			<if test="change_time != null">
		          change_time = #{change_time, jdbcType=VARCHAR},  <!-- 变动时间 -->
			</if>
			<if test="descd != null">
		          descd = #{descd, jdbcType=VARCHAR},  <!-- 描述 -->
			</if>
			<if test="order_sn != null">
		          order_sn = #{order_sn, jdbcType=VARCHAR},  <!-- 订单编号 -->
			</if>
			<if test="order_id != null">
		          order_id = #{order_id, jdbcType=INTEGER},  <!-- 订单id -->
			</if>
		</set>
		WHERE  log_id = #{log_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM zjc_account_log WHERE  log_id = #{log_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="ZjcAccountLogPO">
		SELECT
		<include refid="column" />
		FROM zjc_account_log WHERE  log_id = #{log_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="ZjcAccountLogPO">
		SELECT
		    <include refid="column" />
		FROM zjc_account_log
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="ZjcAccountLogPO">
		SELECT
			<include refid="column" />	
		FROM zjc_account_log
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="ZjcAccountLogPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM zjc_account_log
		<where>
		    <include refid="equal" />
		</where>
		order by log_id desc		
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="ZjcAccountLogPO">
		SELECT
			<include refid="column" />	
		FROM zjc_account_log
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="ZjcAccountLogPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM zjc_account_log
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM zjc_account_log
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM zjc_account_log
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  log_id,  <!-- 日志id -->
		  user_id,  <!-- 用户id -->
		  user_money,  <!-- 用户金额 -->
		  frozen_money,  <!-- 冻结金额 -->
		  pay_points,  <!-- 支付积分 -->
		  change_time,  <!-- 变动时间 -->
		  descd,  <!-- 描述 -->
		  order_sn,  <!-- 订单编号 -->
		  order_id  <!-- 订单id -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  zjc_account_log.log_id,  <!-- 日志id -->
		  zjc_account_log.user_id,  <!-- 用户id -->
		  zjc_account_log.user_money,  <!-- 用户金额 -->
		  zjc_account_log.frozen_money,  <!-- 冻结金额 -->
		  zjc_account_log.pay_points,  <!-- 支付积分 -->
		  zjc_account_log.change_time,  <!-- 变动时间 -->
		  zjc_account_log.descd,  <!-- 描述 -->
		  zjc_account_log.order_sn,  <!-- 订单编号 -->
		  zjc_account_log.order_id  <!-- 订单id -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="log_id != null ">
		      AND log_id = #{log_id}  <!-- 日志id -->
		</if>
	   <if test="user_id != null ">
		      AND user_id = #{user_id}  <!-- 用户id -->
		</if>
	   <if test="user_money != null ">
		      AND user_money = #{user_money}  <!-- 用户金额 -->
		</if>
	   <if test="frozen_money != null ">
		      AND frozen_money = #{frozen_money}  <!-- 冻结金额 -->
		</if>
	   <if test="pay_points != null ">
		      AND pay_points = #{pay_points}  <!-- 支付积分 -->
		</if>
	    <if test="change_time != null and change_time != ''">
		      AND change_time = #{change_time}  <!-- 变动时间 -->
		</if>
	    <if test="descd != null and descd != ''">
		      AND descd = #{descd}  <!-- 描述 -->
		</if>
	    <if test="order_sn != null and order_sn != ''">
		      AND order_sn = #{order_sn}  <!-- 订单编号 -->
		</if>
	   <if test="order_id != null ">
		      AND order_id = #{order_id}  <!-- 订单id -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="change_time != null and change_time != ''">
		      AND change_time like '${change_time}%'  <!-- 变动时间 -->
		</if>
	    <if test="descd != null and descd != ''">
		      AND descd like '${descd}%'  <!-- 描述 -->
		</if>
	    <if test="order_sn != null and order_sn != ''">
		      AND order_sn like '${order_sn}%'  <!-- 订单编号 -->
		</if>
	</sql>
	
</mapper>