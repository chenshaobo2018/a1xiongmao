<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- wx_user_activity[wx_user_activity]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2018-01-31 17:44:12 -->
<mapper namespace="com.wxactivity.share.dao.WxUserActivityDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="WxUserActivityPO">
		INSERT INTO wx_user_activity (
		<if test="open_id != null and open_id != ''">
	         open_id, <!-- open_id -->
		</if>
		<if test="integral != null and integral != ''">
	         integral, <!-- 积分数 -->
		</if>
		<if test="img != null and img != ''">
	         img, <!-- 微信头像 -->
		</if>
		<if test="nickname != null and nickname != ''">
	         nickname, <!-- 昵称名字 -->
		</if>
		<if test="addtime != null and addtime != ''">
	         addtime, <!-- 添加时间 -->
		</if>
		<if test="activity_id != null and activity_id != ''">
	          activity_id  <!-- activity_id -->
	   </if>
		)VALUES(
		<if test="open_id != null and open_id != ''">
	          #{open_id, jdbcType=VARCHAR}, <!-- open_id -->
	    </if>
		<if test="integral != null and integral != ''">
	          #{integral, jdbcType=VARCHAR}, <!-- 积分数 -->
	    </if>
		<if test="img != null and img != ''">
	          #{img, jdbcType=VARCHAR}, <!-- 微信头像 -->
	    </if>
		<if test="nickname != null and nickname != ''">
	          #{nickname, jdbcType=VARCHAR}, <!-- 昵称名字 -->
	    </if>
		<if test="addtime != null and addtime != ''">
	          #{addtime, jdbcType=VARCHAR}, <!-- 添加时间 -->
	    </if>
		<if test="activity_id != null and activity_id != ''">
		     #{activity_id, jdbcType=VARCHAR}  <!-- activity_id -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="WxUserActivityPO">
		INSERT INTO wx_user_activity (
		    <include refid="column" />
		)
		VALUES (
		    #{activity_id, jdbcType=VARCHAR},  <!-- activity_id -->
		    #{open_id, jdbcType=VARCHAR},  <!-- open_id -->
		    #{integral, jdbcType=VARCHAR},  <!-- 积分数 -->
		    #{img, jdbcType=VARCHAR},  <!-- 微信头像 -->
		    #{nickname, jdbcType=VARCHAR},  <!-- 昵称名字 -->
		    #{addtime, jdbcType=VARCHAR}  <!-- 添加时间 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="WxUserActivityPO">
		UPDATE wx_user_activity
		<set>
			<if test="activity_id != null">
		          activity_id = #{activity_id, jdbcType=VARCHAR},  <!-- activity_id -->
			</if>
			<if test="open_id != null">
		          open_id = #{open_id, jdbcType=VARCHAR},  <!-- open_id -->
			</if>
			<if test="integral != null">
		          integral = #{integral, jdbcType=VARCHAR},  <!-- 积分数 -->
			</if>
			<if test="img != null">
		          img = #{img, jdbcType=VARCHAR},  <!-- 微信头像 -->
			</if>
			<if test="nickname != null">
		          nickname = #{nickname, jdbcType=VARCHAR},  <!-- 昵称名字 -->
			</if>
			<if test="addtime != null">
		          addtime = #{addtime, jdbcType=VARCHAR},  <!-- 添加时间 -->
			</if>
		</set>
		WHERE  activity_id = #{activity_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM wx_user_activity WHERE  activity_id = #{activity_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="WxUserActivityPO">
		SELECT
		<include refid="column" />
		FROM wx_user_activity WHERE  activity_id = #{activity_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="WxUserActivityPO">
		SELECT
		    <include refid="column" />
		FROM wx_user_activity
		<where>
		    <include refid="equal" />
		</where>		
	</select>
	
   
    
    
	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="WxUserActivityPO">
		SELECT
			<include refid="column" />	
		FROM wx_user_activity
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="WxUserActivityPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM wx_user_activity
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="WxUserActivityPO">
		SELECT
			<include refid="column" />	
		FROM wx_user_activity
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="WxUserActivityPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM wx_user_activity
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM wx_user_activity
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM wx_user_activity
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  activity_id,  <!-- activity_id -->
		  open_id,  <!-- open_id -->
		  integral,  <!-- 积分数 -->
		  img,  <!-- 微信头像 -->
		  nickname,  <!-- 昵称名字 -->
		  addtime  <!-- 添加时间 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  wx_user_activity.activity_id,  <!-- activity_id -->
		  wx_user_activity.open_id,  <!-- open_id -->
		  wx_user_activity.integral,  <!-- 积分数 -->
		  wx_user_activity.img,  <!-- 微信头像 -->
		  wx_user_activity.nickname,  <!-- 昵称名字 -->
		  wx_user_activity.addtime  <!-- 添加时间 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="activity_id != null and activity_id != ''">
		      AND activity_id = #{activity_id}  <!-- activity_id -->
		</if>
	    <if test="open_id != null and open_id != ''">
		      AND open_id = #{open_id}  <!-- open_id -->
		</if>
	    <if test="integral != null and integral != ''">
		      AND integral = #{integral}  <!-- 积分数 -->
		</if>
	    <if test="img != null and img != ''">
		      AND img = #{img}  <!-- 微信头像 -->
		</if>
	    <if test="nickname != null and nickname != ''">
		      AND nickname = #{nickname}  <!-- 昵称名字 -->
		</if>
	    <if test="addtime != null and addtime != ''">
		      AND addtime = #{addtime}  <!-- 添加时间 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="activity_id != null and activity_id != ''">
		      AND activity_id like '${activity_id}%'  <!-- activity_id -->
		</if>
	    <if test="open_id != null and open_id != ''">
		      AND open_id like '${open_id}%'  <!-- open_id -->
		</if>
	    <if test="integral != null and integral != ''">
		      AND integral like '${integral}%'  <!-- 积分数 -->
		</if>
	    <if test="img != null and img != ''">
		      AND img like '${img}%'  <!-- 微信头像 -->
		</if>
	    <if test="nickname != null and nickname != ''">
		      AND nickname like '${nickname}%'  <!-- 昵称名字 -->
		</if>
	    <if test="addtime != null and addtime != ''">
		      AND addtime like '${addtime}%'  <!-- 添加时间 -->
		</if>
	</sql>
	
</mapper>